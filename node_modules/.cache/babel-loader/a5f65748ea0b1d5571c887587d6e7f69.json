{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\react-app\\\\indexiom\\\\src\\\\pages\\\\basket\\\\Cart.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeProductFromCart } from \"../../features/actions/cartActions\";\n\nconst Cart = props => {\n  const calculateTotal = (total, currentItem) => parseFloat(total + currentItem.price * (currentItem.quantity || 1));\n\n  const renderProduct = (product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [product.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" $\", product.price, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: product.quantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: () => props.removeProduct(index),\n      value: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n\n  const countItems = () => props.products.reduce((acc, cur) => {\n    return parseFloat(acc + (cur.quantity || 1));\n  }, 0).toFixed(0);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [\"Cart (\", countItems(), \" items)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart\",\n      children: props.products.length ? props.products.map(renderProduct) : \"Cart is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" $\", props.products.reduce(calculateTotal, 0).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Cart;\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeProduct: index => dispatch(removeProductFromCart(index))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/react-app/indexiom/src/pages/basket/Cart.js"],"names":["React","connect","removeProductFromCart","Cart","props","calculateTotal","total","currentItem","parseFloat","price","quantity","renderProduct","product","index","name","removeProduct","countItems","products","reduce","acc","cur","toFixed","length","map","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,oCAAtC;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AACpB,QAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,WAAR,KACrBC,UAAU,CAACF,KAAK,GAAGC,WAAW,CAACE,KAAZ,IAAqBF,WAAW,CAACG,QAAZ,IAAwB,CAA7C,CAAT,CADZ;;AAGA,QAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,KAAV,kBACpB;AAAA,4BACE;AAAA,iBAAOD,OAAO,CAACE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,uBAASF,OAAO,CAACH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAOG,OAAO,CAACF;AAAf;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAE,MAAMN,KAAK,CAACW,aAAN,CAAoBF,KAApB,CAFjB;AAGE,MAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,KAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,UADF;;AAaA,QAAMG,UAAU,GAAG,MACjBZ,KAAK,CAACa,QAAN,CACGC,MADH,CACU,CAACC,GAAD,EAAMC,GAAN,KAAc;AACpB,WAAOZ,UAAU,CAACW,GAAG,IAAIC,GAAG,CAACV,QAAJ,IAAgB,CAApB,CAAJ,CAAjB;AACD,GAHH,EAGK,CAHL,EAIGW,OAJH,CAIW,CAJX,CADF;;AAOA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,2BAA+BL,UAAU,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACGZ,KAAK,CAACa,QAAN,CAAeK,MAAf,GACGlB,KAAK,CAACa,QAAN,CAAeM,GAAf,CAAmBZ,aAAnB,CADH,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yBAASP,KAAK,CAACa,QAAN,CAAeC,MAAf,CAAsBb,cAAtB,EAAsC,CAAtC,EAAyCgB,OAAzC,CAAiD,CAAjD,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAtCD;;KAAMlB,I;;AAwCN,MAAMqB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLR,IAAAA,QAAQ,EAAEQ,KAAK,CAACR;AADX,GAAP;AAGD,CAJD;;AAMA,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLZ,IAAAA,aAAa,EAAEF,KAAK,IAAIc,QAAQ,CAACzB,qBAAqB,CAACW,KAAD,CAAtB;AAD3B,GAAP;AAGD,CAJD;;AAMA,eAAeZ,OAAO,CACpBuB,eADoB,EAEpBE,kBAFoB,CAAP,CAGbvB,IAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { removeProductFromCart } from \"../../features/actions/cartActions\";\n\nconst Cart = props => {\n  const calculateTotal = (total, currentItem) =>\n    parseFloat(total + currentItem.price * (currentItem.quantity || 1));\n\n  const renderProduct = (product, index) => (\n    <div key={index}>\n      <span>{product.name} </span>\n      <span> ${product.price} </span>\n      <span>{product.quantity}</span>\n      <input\n        type=\"button\"\n        onClick={() => props.removeProduct(index)}\n        value=\"x\"\n      />\n    </div>\n  );\n\n  const countItems = () =>\n    props.products\n      .reduce((acc, cur) => {\n        return parseFloat(acc + (cur.quantity || 1));\n      }, 0)\n      .toFixed(0);\n\n  return (\n    <div>\n      <div className=\"header\">Cart ({countItems()} items)</div>\n      <div className=\"cart\">\n        {props.products.length\n          ? props.products.map(renderProduct)\n          : \"Cart is empty.\"}\n      </div>\n      <div className=\"total\">\n        <span>Total </span>\n        <span> ${props.products.reduce(calculateTotal, 0).toFixed(2)}</span>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeProduct: index => dispatch(removeProductFromCart(index))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Cart);\n"]},"metadata":{},"sourceType":"module"}