{"ast":null,"code":"import { actionTypes } from \"../actions/actionTypes\";\n\nconst updateQuantity = p => p.quantity ? { ...p,\n  quantity: p.quantity + 1\n} : { ...p,\n  quantity: 2\n};\n\nexport default ((state = [], action) => {\n  switch (action.type) {\n    case actionTypes.ADD_PACK_TO_CART:\n      const productInCart = state.find(p => p.id === action.product.id);\n      if (!productInCart) return [...state, action.product];\n      return state.map(p => {\n        if (p.id === action.product.id) {\n          return updateQuantity(p);\n        }\n\n        return p;\n      });\n\n    case actionTypes.REMOVE_FROM_CART:\n      return [...state.slice(0, action.index), ...state.slice(action.index + 1)];\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/react-app/indexiom/src/features/reducers/cart.js"],"names":["actionTypes","updateQuantity","p","quantity","state","action","type","ADD_PACK_TO_CART","productInCart","find","id","product","map","REMOVE_FROM_CART","slice","index"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;;AAEA,MAAMC,cAAc,GAAGC,CAAC,IACtBA,CAAC,CAACC,QAAF,GAAa,EAAE,GAAGD,CAAL;AAAQC,EAAAA,QAAQ,EAAED,CAAC,CAACC,QAAF,GAAa;AAA/B,CAAb,GAAkD,EAAE,GAAGD,CAAL;AAAQC,EAAAA,QAAQ,EAAE;AAAlB,CADpD;;AAGA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAW,CAACO,gBAAjB;AACE,YAAMC,aAAa,GAAGJ,KAAK,CAACK,IAAN,CAAWP,CAAC,IAAIA,CAAC,CAACQ,EAAF,KAASL,MAAM,CAACM,OAAP,CAAeD,EAAxC,CAAtB;AACA,UAAI,CAACF,aAAL,EAAoB,OAAO,CAAC,GAAGJ,KAAJ,EAAWC,MAAM,CAACM,OAAlB,CAAP;AACpB,aAAOP,KAAK,CAACQ,GAAN,CAAUV,CAAC,IAAI;AACpB,YAAIA,CAAC,CAACQ,EAAF,KAASL,MAAM,CAACM,OAAP,CAAeD,EAA5B,EAAgC;AAC9B,iBAAOT,cAAc,CAACC,CAAD,CAArB;AACD;;AACD,eAAOA,CAAP;AACD,OALM,CAAP;;AAMF,SAAKF,WAAW,CAACa,gBAAjB;AACE,aAAO,CACL,GAAGT,KAAK,CAACU,KAAN,CAAY,CAAZ,EAAeT,MAAM,CAACU,KAAtB,CADE,EAEL,GAAGX,KAAK,CAACU,KAAN,CAAYT,MAAM,CAACU,KAAP,GAAe,CAA3B,CAFE,CAAP;;AAIF;AACE,aAAOX,KAAP;AAhBJ;AAkBD,CAnBD","sourcesContent":["import { actionTypes } from \"../actions/actionTypes\";\n\nconst updateQuantity = p =>\n  p.quantity ? { ...p, quantity: p.quantity + 1 } : { ...p, quantity: 2 };\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case actionTypes.ADD_PACK_TO_CART:\n      const productInCart = state.find(p => p.id === action.product.id);\n      if (!productInCart) return [...state, action.product];\n      return state.map(p => {\n        if (p.id === action.product.id) {\n          return updateQuantity(p);\n        }\n        return p;\n      });\n    case actionTypes.REMOVE_FROM_CART:\n      return [\n        ...state.slice(0, action.index),\n        ...state.slice(action.index + 1)\n      ];\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}