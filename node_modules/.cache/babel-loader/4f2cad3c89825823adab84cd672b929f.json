{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  basketData: []\n};\nconsole.log(initialState); // Add product to the cart\n\nconst BasketSlice = createSlice({\n  name: \"baskets\",\n  initialState,\n  reducers: {\n    addToBasket: (state, action) => {\n      state.basketData.push(action.payload);\n    },\n    //Remove product from the cart\n    removeFromBasket: (state, payload) => {\n      //const index = state.basketData.findIndex(basketItem => basketItem.id === action.payload.id);\n      const index = state.basketData.findIndex(basketItem => basketItem.id === payload.id);\n      let newBasket = [...state.basketData];\n      console.log(index);\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cant remove product (id: ${payload.id}) as its not in basket!`);\n      }\n\n      return { ...state,\n        basketData: newBasket\n      };\n    }\n  }\n});\nexport const {\n  addToBasket,\n  removeFromBasket\n} = BasketSlice.actions;\nexport const selectBasketData = state => state.baskets.basketData;\nexport default BasketSlice.reducer;","map":{"version":3,"sources":["C:/react-app/indexiom/src/features/reducers/BasketSlice.js"],"names":["createSlice","initialState","basketData","console","log","BasketSlice","name","reducers","addToBasket","state","action","push","payload","removeFromBasket","index","findIndex","basketItem","id","newBasket","splice","warn","actions","selectBasketData","baskets","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE;AADK,CAArB;AAIAC,OAAO,CAACC,GAAR,CAAYH,YAAZ,E,CAEA;;AACA,MAAMI,WAAW,GAAGL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,SADsB;AAE5BL,EAAAA,YAF4B;AAG5BM,EAAAA,QAAQ,EAAE;AACVC,IAAAA,WAAW,EAAG,CAACC,KAAD,EAAQC,MAAR,KAAkB;AAC5BD,MAAAA,KAAK,CAACP,UAAN,CAAiBS,IAAjB,CAAsBD,MAAM,CAACE,OAA7B;AACH,KAHS;AAKV;AACAC,IAAAA,gBAAgB,EAAE,CAACJ,KAAD,EAAQG,OAAR,KAAmB;AAEjC;AACA,YAAME,KAAK,GAAGL,KAAK,CAACP,UAAN,CAAiBa,SAAjB,CACTC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBL,OAAO,CAACK,EADhC,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAACP,UAAV,CAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;;AAEA,UAAKA,KAAK,IAAI,CAAd,EAAiB;AACbI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACH,OAFD,MAEM;AACFX,QAAAA,OAAO,CAACiB,IAAR,CACG,4BAA2BR,OAAO,CAACK,EAAG,yBADzC;AAGH;;AAGD,aAAO,EACH,GAAGR,KADA;AAEHP,QAAAA,UAAU,EAAEgB;AAFT,OAAP;AAIH;AA5BS;AAHkB,CAAD,CAA/B;AAsCA,OAAO,MAAM;AACTV,EAAAA,WADS;AAETK,EAAAA;AAFS,IAGTR,WAAW,CAACgB,OAHT;AAKP,OAAO,MAAMC,gBAAgB,GAAGb,KAAK,IAAIA,KAAK,CAACc,OAAN,CAAcrB,UAAhD;AAEP,eAAeG,WAAW,CAACmB,OAA3B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\nconst initialState = {\n    basketData: []\n}\n\nconsole.log(initialState)\n\n// Add product to the cart\nconst BasketSlice = createSlice({\n    name: \"baskets\",\n    initialState,\n    reducers: {\n    addToBasket : (state, action) =>{\n        state.basketData.push(action.payload)\n    },\n    \n    //Remove product from the cart\n    removeFromBasket: (state, payload) =>{\n        \n        //const index = state.basketData.findIndex(basketItem => basketItem.id === action.payload.id);\n        const index = state.basketData.findIndex(\n            (basketItem) => basketItem.id === payload.id\n        );\n        let newBasket = [...state.basketData];\n        console.log(index)\n\n        if ( index >= 0) { \n            newBasket.splice(index, 1); \n        }else {\n            console.warn(\n              `Cant remove product (id: ${payload.id}) as its not in basket!`\n            )\n        }\n    \n        \n        return {\n            ...state,\n            basketData: newBasket\n        }\n    }\n\n   \n\n    }\n});\n\nexport const {\n    addToBasket,\n    removeFromBasket\n} = BasketSlice.actions\n\nexport const selectBasketData = state => state.baskets.basketData;\n\nexport default BasketSlice.reducer\n"]},"metadata":{},"sourceType":"module"}