{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\react-app\\\\indexiom\\\\src\\\\features\\\\post\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactHtmlParser from \"react-html-parser\";\nimport Button from '../button/Button';\nimport { Section, Row, Article, Container, MethodItem, BarTop } from './PostElement';\n\nconst Post = ({\n  slogan,\n  marketingAgency,\n  paradoxe,\n  ourMethod\n}) => {\n  _s();\n\n  const [tabview, setTabview] = useState(false);\n\n  const handleClick = () => {\n    setTabview(current => !current);\n  };\n\n  useEffect(() => {\n    console.log(tabview);\n  }, [tabview]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Section, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(BarTop, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Article, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: ReactHtmlParser(slogan)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"marketingDiv\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: ReactHtmlParser(marketingAgency.header)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 29\n              }, this), ReactHtmlParser(marketingAgency.content)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"paradoxDiv\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"titleSection\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: ReactHtmlParser(paradoxe.header)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 55\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tabviewBlock\",\n                children: paradoxe.context.map((tab, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `tabPack ${tabview === index ? 'opened' : 'closed'}`,\n                    onClick: () => setTabview(index),\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: ReactHtmlParser(tab.title)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 46,\n                      columnNumber: 49\n                    }, this), tabview === index ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tabText\",\n                      children: ReactHtmlParser(tab.content)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 49,\n                      columnNumber: 57\n                    }, this) : '']\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(MethodItem, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"titleSection\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: ReactHtmlParser(ourMethod.header)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 59\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"blockItems\",\n                children: ourMethod.context.map((item, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"rowItem\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"imgBlock\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: item.image\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 68,\n                          columnNumber: 54\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 68,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"contentBlock\",\n                      children: [ReactHtmlParser(item.title), ReactHtmlParser(item.content), item.buttonText ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"readMore\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: item.buttonText\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 77,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 76,\n                        columnNumber: 57\n                      }, this) : '']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 45\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Post, \"Eu95IAq5uZX5M+r6PUmfrq+seeU=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/react-app/indexiom/src/features/post/Post.js"],"names":["React","useEffect","useState","ReactHtmlParser","Button","Section","Row","Article","Container","MethodItem","BarTop","Post","slogan","marketingAgency","paradoxe","ourMethod","tabview","setTabview","handleClick","current","console","log","header","content","context","map","tab","index","title","item","image","buttonText"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ReactHtmlParser from \"react-html-parser\";\nimport Button from '../button/Button';\nimport {\n    Section,\n    Row,\n    Article,\n    Container,\n    MethodItem,\n    BarTop\n} from './PostElement'\n\nconst Post = ({slogan, marketingAgency, paradoxe, ourMethod}) =>{\n\n    const [tabview, setTabview] = useState(false);\n\n    const handleClick = () =>{\n        setTabview(current => !current)\n    }\n\n    useEffect(() =>{\n        console.log(tabview)\n    }, [tabview])\n\n    return(\n        <>\n            <Section>\n                <Container>\n                    <Row>\n                        <BarTop>\n                            <div className=\"bar\"></div>\n                        </BarTop>\n                        <Article>\n                        <h4>{ReactHtmlParser(slogan)}</h4>\n                        <div className=\"marketingDiv\">\n                            <h4>{ReactHtmlParser(marketingAgency.header)}</h4>\n                            {ReactHtmlParser(marketingAgency.content)}\n                        </div>\n                        <div className=\"paradoxDiv\">\n                        <div className=\"titleSection\"><h2>{ReactHtmlParser(paradoxe.header)}</h2></div>\n                            <div className=\"tabviewBlock\">\n                                {\n                                    paradoxe.context.map((tab, index) => (\n                                        <>\n                                            <div className={`tabPack ${tabview ===index ? 'opened' : 'closed'}`} onClick={() =>setTabview(index)} key={index}>\n                                                <h5>{ReactHtmlParser(tab.title)}</h5>\n                                                {\n                                                    tabview === index ? (\n                                                        <div className=\"tabText\">\n                                                    {ReactHtmlParser(tab.content)}\n                                                </div>\n                                                    ) : ''\n                                                }\n                                            </div>\n                                        </>\n                                    ))\n                                }\n                            </div>\n                        </div>\n                        <MethodItem>\n                            <div className=\"titleSection\"><h2>{ReactHtmlParser(ourMethod.header)}</h2></div>\n                            <div className=\"blockItems\">\n                                {\n                                    ourMethod.context.map((item, index) =>(\n                                        <>\n                                        <div key={index} className=\"rowItem\">\n                                            <div className=\"imgBlock\">\n                                                <div><img src={item.image}></img></div>\n                                            </div>\n                                            <div className=\"contentBlock\">\n                                                {ReactHtmlParser(item.title)}\n                                                {ReactHtmlParser(item.content)}\n                                                {\n                                                    item.buttonText ? \n                                                    (\n                                                        <div className=\"readMore\">\n                                                            <img src={item.buttonText}/>\n                                                        </div>\n                                                    ) : ''\n                                                \n                                                }\n                                                \n                                            </div>\n                                        </div>\n                                        </>\n                                    ))\n                                }\n                            </div>\n                        </MethodItem>\n                        </Article>\n                    </Row>\n                </Container>\n            </Section>\n        </>\n    )\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}